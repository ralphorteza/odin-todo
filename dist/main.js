(()=>{"use strict";class t{constructor(t,e,s="No Date"){this.name=t,this.id=e,this.dueDate=s}setName(t){this.name=t}setDate(t){this.dueDate=t}getName(){return this.name}getID(){return this.id}getDate(){return this.dueDate}}class e{constructor(t,e){this.name=t,this.id=e,this.tasks=[]}setName(t){this.name=t}getName(){return this.name}setTasks(t){this.tasks=t}getTasks(){return this.tasks}getTask(t){return this.tasks.find((e=>e.getID()===t))}contains(t){return this.tasks.some((e=>e.getID()===t))}addTask(e,s,a){this.tasks.push(new t(e,s,a))}deleteTask(t){const e=this.tasks.findIndex((e=>e.getID()===t));this.tasks.splice(e,1)}}class s{constructor(){this.projects=[],this.projects.push(new e("Inbox"))}setProjects(t){this.projects=t}getProjects(){return this.projects}getProject(t){return this.projects.find((e=>e.getName()===t))}contains(t){return this.projects.some((e=>e.getName()===t))}addProject(t){this.projects.find((e=>e.name===t.name))||this.projects.push(t)}deleteProject(t){const e=this.projects.indexOf((e=>e.getName()===t));this.projects.splice(e,1)}}class a{static saveToDoList(t){localStorage.setItem("todoList",JSON.stringify(t))}static getToDoList(){let t=new s;return null===localStorage.getItem("todolist")&&localStorage.setItem("todolist",JSON.stringify(t)),t=JSON.parse(localStorage.getItem("todolist")),t}static addProject(t){const e=a.getToDoList();e.addProject(t),a.saveToDoList(e)}static deleteProject(t){const e=a.todolist();e.deleteProject(t),a.saveToDoList(e)}static addTask(t,e){const s=a.todolist();s.getProject(t).addTask(e),a.saveToDoList(s)}static deleteTask(t,e){const s=a.todolist();s.getProject(t).deleteTask(e),a.saveToDoList(s)}static renameTask(t,e,s){const o=a.getToDoList();o.getProject(t).getTask(e).setName(s),a.saveToDoList(o)}static setTaskDate(t,e,s){a.getToDoList().getProject(t).getTask(e).setDate(s)}}class o{static aProjectCard(t){const e=document.querySelector("#custom-projects-list"),s=document.createElement("button");s.setAttribute("class","button-project"),s.textContent=t,e.append(s)}static aTaskCard(t,e){const s=document.querySelector("#project-preview"),a=document.createElement("div"),o=document.createElement("div"),c=document.createElement("div"),n=document.createElement("input"),r=document.createElement("p"),d=document.createElement("p"),i=document.createElement("button"),l=document.createElement("button");a.classList.add("task"),o.classList.add("left-panel"),c.classList.add("right-panel"),r.classList.add("task-name"),d.classList.add("date"),i.classList.add("button-edit-task"),l.classList.add("button-delete-task"),n.setAttribute("type","checkbox"),r.textContent=t,d.textContent=e,i.textContent="edit",l.textContent="delete",o.append(n),o.append(r),c.append(d),c.append(i),c.append(l),a.append(o),a.append(c),s.append(a)}}class c{static forTaskButtons(){const t=document.querySelectorAll(".button-edit-task"),e=document.querySelectorAll(".button-delete-task");t.forEach((t=>{t.addEventListener("click",c.editTask)})),e.forEach((t=>{t.addEventListener("click",c.deleteTask)}))}static editTask(t){const e=t.target.parentElement.parentElement.children[0].children[1].textContent;console.log(e)}static deleteTask(t){const e=t.target.parentElement.parentElement;console.log(e),e.remove()}static projectEvents(){c.addProjectButtons()}static addProjectButtons(){const t=document.querySelector("#button-add-project"),e=document.querySelector("#button-cancel-project");t.addEventListener("click",c.addProject),e.addEventListener("click",c.cancelProject)}static addProject(){const t=document.querySelector("#input-add-project").value;""!==t&&o.aProjectCard(t)}static cancelProject(){document.querySelector("#input-add-project").value=""}static formEvents(){c.forAddTaskButton(),c.forTaskFormButtons()}static forAddTaskButton(){document.querySelector("#add-task").addEventListener("click",c.openTaskForm)}static openTaskForm(){const t=document.querySelector("#overlay"),e=document.querySelector("#form-container");t.classList.add("active"),e.classList.add("active")}static forTaskFormButtons(){const t=document.querySelector("#cancel-task"),e=document.querySelector("#form");t.addEventListener("click",c.cancelTaskForm),e.addEventListener("submit",c.createTask)}static cancelTaskForm(){const t=document.querySelector("#overlay"),e=document.querySelector("#form-container");t.classList.remove("active"),e.classList.remove("active")}static createTask(e){e.preventDefault();const s=document.querySelector("#task-title").value,a=document.querySelector("#task-date").value,c=new t(s,a);o.aTaskCard(c.getName(),c.getDate()),document.querySelector("#form-container").classList.remove("active"),document.querySelector("#overlay").classList.remove("active")}}class n{static loadPage(){a.getToDoList(),n.todolistTesting(),c.formEvents(),c.forTaskButtons(),c.projectEvents()}static taskCardTesting(){const e=new t("example 1",123,"12/15/2022");o.aTaskCard(e.getName(),e.getDate());const s=new t("example 2",3435,"11/15/2022");o.aTaskCard(s.getName(),s.getDate());const a=new t("example 3",5324,"10/15/2022");o.aTaskCard(a.getName(),a.getDate());const c=new t("example 4",3324,"9/15/2022");o.aTaskCard(c.getName(),c.getDate());const n=new t("example 5",3411,"8/15,2022");return o.aTaskCard(n.getName,n.getDate),{task1:e,task2:s,task3:a,task4:c}}static projectTesting(){const t=new e("testProject1","ARFVB"),s=new e("testProject2","DFDFD"),a=this.taskCardTesting();return t.addTask(a.task1.getName(),a.task1.getID(),a.task1.getDate()),t.addTask(a.task2.getName(),a.task2.getID(),a.task2.getDate()),t.addTask(a.task3.getName(),a.task3.getID(),a.task3.getDate()),s.addTask(a.task4.getName,a.task4.getID,a.task4.getDate),{testProject1:t,testProject2:s}}static todolistTesting(){const t=a.getToDoList(),e=this.projectTesting();console.log("before adding project"),console.log(t),console.log("After adding testProject1"),a.addProject(e.testProject1),console.log(t)}}document.addEventListener("DOMContentLoaded",n.loadPage)})();