(()=>{"use strict";class t{constructor(t,e="No Date"){this.name=t,this.dueDate=e}setName(t){this.name=t}setDate(t){this.dueDate=t}getName(){return this.name}getDate(){return this.dueDate}}class e{static aProjectCard(t){const e=document.querySelector("#custom-projects-list"),s=document.createElement("div"),c=document.createElement("div"),o=document.createElement("div"),a=document.createElement("button"),n=document.createElement("button"),r=document.createElement("button");a.setAttribute("class","button-project"),n.setAttribute("class","button-edit-project"),r.setAttribute("class","button-delete-project"),a.textContent=t,n.textContent="edit",r.textContent="del",c.append(a),o.append(n),o.append(r),s.append(c),s.append(o),e.append(s)}static aTaskCard(t,e){const s=document.querySelector("#project-preview"),c=document.createElement("div"),o=document.createElement("div"),a=document.createElement("div"),n=document.createElement("input"),r=document.createElement("p"),d=document.createElement("p"),i=document.createElement("button"),l=document.createElement("button");c.classList.add("task"),o.classList.add("left-panel"),a.classList.add("right-panel"),r.classList.add("task-name"),d.classList.add("date"),i.classList.add("button-edit-task"),l.classList.add("button-delete-task"),n.setAttribute("type","checkbox"),r.textContent=t,d.textContent=e,i.textContent="edit",l.textContent="delete",o.append(n),o.append(r),a.append(d),a.append(i),a.append(l),c.append(o),c.append(a),s.append(c)}}class s{static formEvents(){s.forAddTaskButton(),s.forTaskFormButtons()}static forAddTaskButton(){document.querySelector("#add-task").addEventListener("click",s.openTaskForm)}static openTaskForm(){const t=document.querySelector("#overlay"),e=document.querySelector("#form-container");t.classList.add("active"),e.classList.add("active")}static forTaskFormButtons(){const t=document.querySelector("#cancel-task"),e=document.querySelector("#form");t.addEventListener("click",s.cancelTaskForm),e.addEventListener("submit",s.createTask)}static cancelTaskForm(){const t=document.querySelector("#overlay"),e=document.querySelector("#form-container");t.classList.remove("active"),e.classList.remove("active")}static createTask(s){s.preventDefault();const c=document.querySelector("#task-title").value,o=document.querySelector("#task-date").value,a=new t(c,o);e.aTaskCard(a.getName(),a.getDate()),document.querySelector("#form-container").classList.remove("active"),document.querySelector("#overlay").classList.remove("active")}}class c{constructor(t){this.name=t,this.tasks=[]}setName(t){this.name=t}getName(){return this.name}setTasks(t){this.tasks=t}getTasks(){return this.tasks}getTask(t){return this.tasks.find((e=>e.getName()===t))}contains(t){return this.tasks.some((e=>e.getName()===t))}addTask(t){this.tasks.find((e=>e.getName()===t.name))||this.tasks.push(t)}deleteTask(t){this.tasks=this.tasks.filter((e=>e.name!==t))}}class o{constructor(){this.projects=[],this.projects.push(new c("Inbox","ADRE"))}setProjects(t){this.projects=t}getProjects(){return this.projects}getProject(t){return this.projects.find((e=>e.getName()===t))}contains(t){return this.projects.some((e=>e.getName()===t))}addProject(t){this.projects.find((e=>e.name===t.name))||this.projects.push(t)}deleteProject(t){const e=this.projects.find((e=>e.getName()===t));this.projects.splice(this.projects.indexOf(e),1)}}class a{static saveProjectsList(t){localStorage.setItem("projectsList",JSON.stringify(t))}static getProjectsList(){const e=Object.assign(new o,JSON.parse(localStorage.getItem("projectsList")));return e.setProjects(e.getProjects().map((t=>Object.assign(new c,t)))),e.getProjects().forEach((e=>e.setTasks(e.getTasks().map((e=>Object.assign(new t,e)))))),e}static addProject(t){const e=a.getProjectsList();e.addProject(t),a.saveProjectsList(e)}static deleteProject(t){const e=a.getProjectsList();e.deleteProject(t),a.saveProjectsList(e)}static addTask(t,e){const s=a.getProjectsList();s.getProject(t).addTask(e),a.saveProjectsList(s)}static deleteTask(t,e){const s=a.getProjectsList();s.getProject(t).deleteTask(e),a.saveProjectsList(s)}static renameTask(t,e,s){const c=a.getProjectsList();c.getProject(t).getTask(e).setName(s),a.saveProjectsList(c)}static setTaskDate(t,e,s){a.getProjectsList().getProject(t).getTask(e).setDate(s)}}class n{static projectEvents(){n.addProjectButtons()}static addProjectButtons(){const t=document.querySelector("#button-add-project"),e=document.querySelector("#button-cancel-project");t.addEventListener("click",n.addProject),e.addEventListener("click",n.cancelProject)}static addProject(){const t=document.querySelector("#input-add-project").value;""!==t?a.getProjectsList().contains(t)?console.log(`${t} already exist!`):(a.addProject(new c(t)),e.aProjectCard(t),n.initProjectButtons(),console.log(`${t} created!`)):console.log("Project name cannot be empty!")}static cancelProject(){document.querySelector("#input-add-project").value="",console.log("project cancelled")}static initProjectButtons(){document.querySelectorAll(".button-project").forEach((t=>{t.addEventListener("click",n.selectedProjectInSidebar)}))}static selectedProjectInSidebar(t){const e=t.target.textContent;console.log(`project button ${e} clicked!`),n.openProject(e,this)}static openProject(t,e){document.querySelector("#project-preview");const s=document.querySelector("#project-name-header"),c=document.querySelectorAll(".button-default-project"),o=document.querySelectorAll(".button-project"),a=document.querySelector("#button-delete-project");a.style.display="none","Inbox"!==t&&(a.style.display="block"),s.textContent=t,[...c,...o].forEach((t=>t.classList.remove("active"))),e.classList.add("active")}static openInboxProject(){document.querySelector("#button-inbox-projects").addEventListener("click",n.selectedProjectInSidebar)}}class r{static taskEvents(){const t=document.querySelectorAll(".button-edit-task"),e=document.querySelectorAll(".button-delete-task");t.forEach((t=>{t.addEventListener("click",r.editTask)})),e.forEach((t=>{t.addEventListener("click",r.deleteTask)}))}}class d{static task(){r.taskEvents()}static project(){n.projectEvents()}static initProjectButtons(){n.initProjectButtons()}static openProject(t,e){n.openProject(t,e)}static openInboxProject(){n.openInboxProject()}static form(){s.formEvents()}}class i{static loadPage(){d.form(),d.task(),d.project(),d.openProject("Inbox",document.querySelector("#button-inbox-projects")),i.loadProjects(),d.openInboxProject()}static loadProjects(){a.getProjectsList().getProjects().forEach((t=>{"Inbox"!==t.name&&i.loadProject(t.name)}))}static loadProject(t){e.aProjectCard(t),d.initProjectButtons(),console.log(`${t} button created!`)}}document.addEventListener("DOMContentLoaded",i.loadPage)})();