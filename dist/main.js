(()=>{"use strict";class t{constructor(t){this.name=t,this.tasks=[]}setName(t){this.name=t}getName(){return this.name}setTasks(t){this.tasks=t}getTasks(){return this.tasks}getTask(t){return this.tasks.find((e=>e.getName()===t))}contains(t){return this.tasks.some((e=>e.getName()===t))}addTask(t){this.tasks.find((e=>e.getName()===t.name))||this.tasks.push(t)}deleteTask(t){this.tasks=this.tasks.filter((e=>e.name!==t))}}class e{constructor(){this.projects=[],this.projects.push(new t("Inbox","ADRE"))}setProjects(t){this.projects=t}getProject(t){return this.projects.find((e=>e.getName()===t))}contains(t){return this.projects.some((e=>e.getName()===t))}addProject(t){this.projects.find((e=>e.name===t.name))||this.projects.push(t)}deleteProject(t){const e=this.projects.find((e=>e.getName()===t));this.projects.splice(this.projects.indexOf(e),1)}}class s{constructor(t,e="No Date"){this.name=t,this.dueDate=e}setName(t){this.name=t}setDate(t){this.dueDate=t}getName(){return this.name}getID(){return this.id}getDate(){return this.dueDate}}class a{static aProjectCard(t){const e=document.querySelector("#custom-projects-list"),s=document.createElement("button");s.setAttribute("class","button-project"),s.textContent=t,e.append(s)}static aTaskCard(t,e){const s=document.querySelector("#project-preview"),a=document.createElement("div"),c=document.createElement("div"),n=document.createElement("div"),o=document.createElement("input"),r=document.createElement("p"),d=document.createElement("p"),i=document.createElement("button"),l=document.createElement("button");a.classList.add("task"),c.classList.add("left-panel"),n.classList.add("right-panel"),r.classList.add("task-name"),d.classList.add("date"),i.classList.add("button-edit-task"),l.classList.add("button-delete-task"),o.setAttribute("type","checkbox"),r.textContent=t,d.textContent=e,i.textContent="edit",l.textContent="delete",c.append(o),c.append(r),n.append(d),n.append(i),n.append(l),a.append(c),a.append(n),s.append(a)}}class c{static forTaskButtons(){const t=document.querySelectorAll(".button-edit-task"),e=document.querySelectorAll(".button-delete-task");t.forEach((t=>{t.addEventListener("click",c.editTask)})),e.forEach((t=>{t.addEventListener("click",c.deleteTask)}))}static editTask(t){t.target.parentElement.parentElement.children[0].children[1].textContent}static deleteTask(t){t.target.parentElement.parentElement.remove()}static projectEvents(){c.addProjectButtons()}static addProjectButtons(){const t=document.querySelector("#button-add-project"),e=document.querySelector("#button-cancel-project");t.addEventListener("click",c.addProject),e.addEventListener("click",c.cancelProject)}static addProject(){const t=document.querySelector("#input-add-project").value;""!==t&&a.aProjectCard(t)}static cancelProject(){document.querySelector("#input-add-project").value=""}static formEvents(){c.forAddTaskButton(),c.forTaskFormButtons()}static forAddTaskButton(){document.querySelector("#add-task").addEventListener("click",c.openTaskForm)}static openTaskForm(){const t=document.querySelector("#overlay"),e=document.querySelector("#form-container");t.classList.add("active"),e.classList.add("active")}static forTaskFormButtons(){const t=document.querySelector("#cancel-task"),e=document.querySelector("#form");t.addEventListener("click",c.cancelTaskForm),e.addEventListener("submit",c.createTask)}static cancelTaskForm(){const t=document.querySelector("#overlay"),e=document.querySelector("#form-container");t.classList.remove("active"),e.classList.remove("active")}static createTask(t){t.preventDefault();const e=document.querySelector("#task-title").value,c=document.querySelector("#task-date").value,n=new s(e,c);a.aTaskCard(n.getName(),n.getDate()),document.querySelector("#form-container").classList.remove("active"),document.querySelector("#overlay").classList.remove("active")}}class n{static loadPage(){console.log(this.projectsList),n.projectsListTesting(),c.formEvents(),c.forTaskButtons(),c.projectEvents()}static projectsListTesting(){const t=this.projectTesting();console.log("before adding project"),console.log(e.projects),console.log("After adding testProject1"),this.projectsList.addProject(t.testProject1)}static taskCardTesting(){const t=new s("example 1",123,"12/15/2022");a.aTaskCard(t.getName(),t.getDate());const e=new s("example 2",3435,"11/15/2022");a.aTaskCard(e.getName(),e.getDate());const c=new s("example 3",5324,"10/15/2022");a.aTaskCard(c.getName(),c.getDate());const n=new s("example 4",3324,"9/15/2022");a.aTaskCard(n.getName(),n.getDate());const o=new s("example 5",3411,"8/15,2022");return a.aTaskCard(o.getName(),o.getDate()),{task1:t,task2:e,task3:c,task4:n}}static projectTesting(){const e=new t("testProject1","ARFVB"),s=new t("testProject2","DFDFD"),a=this.taskCardTesting();return e.addTask(a.task1.getName(),a.task1.getID(),a.task1.getDate()),e.addTask(a.task2.getName(),a.task2.getID(),a.task2.getDate()),e.addTask(a.task3.getName(),a.task3.getID(),a.task3.getDate()),s.addTask(a.task4.getName,a.task4.getID,a.task4.getDate),{testProject1:e,testProject2:s}}}document.addEventListener("DOMContentLoaded",n.loadPage)})();