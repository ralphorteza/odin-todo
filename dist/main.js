(()=>{"use strict";class t{constructor(t,e,o="No Date"){this.name=t,this.id=e,this.dueDate=o}setName(t){this.name=t}setDate(t){this.dueDate=t}getName(){return this.name}getId(){return this.id}getDate(){return this.dueDate}}class e{constructor(t,e){this.name=t,this.id=e,this.tasks=[]}setName(t){this.name=t}getName(){return this.name}setTasks(t){this.tasks=t}getTasks(){return this.tasks}getTask(t){return this.task.find((e=>e.getName()===t))}contains(e){return this.tasks.some((o=>t.getID===e))}addTask(e,o,s){const c=new t(e,o,s);this.tasks.push(c)}deleteTask(t){this.tasks=this.tasks.filter((e=>e.name!==t))}}class o{constructor(){this.projects=[],this.projects.push(new e("Inbox"))}setProjects(t){this.projects=t}getProjects(){return this.projects}getProject(t){return this.projects.find((e=>e.getName()===t))}contains(t){return this.projects.some((e=>e.getName()===t))}addProject(t){this.projects.find((e=>e.name===t.name))||this.projects.push(t)}deleteProject(t){const e=this.projects.find((e=>e.getName()===t));this.projects.splice(this.projects.indexOf(e),1)}}class s{static saveToDoList(t){localStorage.setItem("toDoList",JSON.stringify(t))}static getToDoList(){const s=Object.assign(new o,JSON.parse(localStorage.getItem("toDoList")));return s.setProjects(s.getProjects().map((t=>Object.assign(new e,t)))),s.getProjects().forEach((e=>e.setTasks(e.getTasks().map((e=>Object.assign(new t,e)))))),s}static addProject(t){const e=s.getToDoList();e.addProject(t),s.saveToDoList(e)}static deleteProject(t){const e=s.getToDoList();e.deleteProject(t),s.saveToDoList(e)}static addTask(t,e){const o=s.getToDoList();o.getProject(t).addTask(e),s.saveToDoList(o)}static deleteTask(t,e){const o=s.getToDoList();o.getProject(t).deleteTask(e),s.saveToDoList(o)}static renameTask(t,e,o){const c=s.getToDoList();c.getProject(t).getTask(e).setName(o),s.saveToDoList(c)}static setTaskDate(t,e,o){s.getToDoList().getProject(t).getTask(e).setDate(o)}}class c{static loadPage(){c.loadProjects(),c.form(),c.initAddProjectButtons(),c.openProject("Inbox",document.getElementById("button-inbox-projects"))}static loadTasks(t){s.getToDoList().getProject(t).getTasks().forEach((t=>c.createTask(t.name,t.dueDate)))}static loadProjectContent(t){const e=document.querySelector("#project-preview"),o=document.createElement("h1");o.setAttribute("id","project-name"),o.textContent=t;const s=document.createElement("div");s.setAttribute("id","tasks-list"),e.append(o),e.append(s),c.loadTasks(t)}static loadProjects(){s.getToDoList().getProjects().forEach((t=>{"Inbox"!==t.name&&c.createProject(t.name)})),c.initAddProjectButtons()}static initAddProjectButtons(){const t=document.querySelector("#button-add-project"),e=document.querySelector("#button-add-project-popup"),o=document.querySelector("#button-cancel-project-popup"),s=document.querySelector("#input-add-project-popup");t.addEventListener("click",c.openAddProjectPopup),e.addEventListener("click",c.addProject),o.addEventListener("click",c.closeAddProjectPopup),s.addEventListener("keypress",c.handleAddProjectInput)}static openInboxTasks(){c.openProject("Inbox",this)}static handleProjectButton(){const t=this.textContent;c.openProject(t,this)}static initProjectButtons(){const t=document.querySelector("#button-inbox-projects"),e=document.querySelectorAll(".button-project");t.addEventListener("click",c.openInboxTasks),e.forEach((t=>{t.addEventListener("click",c.handleProjectButton)}))}static openAddProjectPopup(){const t=document.querySelector("#add-project-popup"),e=document.querySelector("#button-add-project");t.classList.add("active"),e.classList.add("active")}static closeAddProjectPopup(){const t=document.querySelector("#add-project-popup"),e=document.querySelector("#button-add-project"),o=document.querySelector("#input-add-project-popup");t.classList.remove("active"),e.classList.remove("active"),o.value=""}static handleAddProjectInput(t){"Enter"===t.key&&c.addProject()}static openProject(t,e){const o=[...document.querySelectorAll(".button-default-project"),...document.querySelectorAll(".button-project")];document.querySelector("#project-preview").innerHTML="",o.forEach((t=>t.classList.remove("active"))),e.classList.add("active"),c.closeAddProjectPopup(),c.loadProjectContent(t)}static addProject(){const t=document.getElementById("input-add-project-popup"),o=t.value;if(""!==o){if(s.getToDoList().contains(o))return t.value="",void alert("project name must be different");s.addProject(new e(o)),c.createProject(o),c.closeAddProjectPopup()}else alert("project name can't be empty")}static createProject(t){const e=document.querySelector("#projects-list"),o=document.createElement("button");o.setAttribute("class","button-project"),o.textContent=t,e.append(o),c.initProjectButtons()}static createTask(t,e){const o=document.querySelector("#tasks-list"),s=document.createElement("div"),a=document.createElement("input"),n=document.createElement("div"),r=document.createElement("div"),d=document.createElement("button"),i=document.createElement("button");s.classList.add("task"),n.classList.add("task-name"),r.classList.add("date"),d.classList.add("edit"),i.classList.add("delete"),a.setAttribute("type","checkbox"),n.textContent=t,r.textContent=e,d.textContent="edit",i.textContent="delete",s.append(a),s.append(n),s.append(r),s.append(d),s.append(i),o.append(s),c.initTaskButtons()}static initTaskButtons(){const t=document.querySelectorAll("button.delete");document.querySelectorAll("button.edit").forEach((t=>{t.addEventListener("click",c.taskDeleteBtnHandler)})),t.forEach((t=>{t.addEventListener("click",c.taskDeleteBtnHandler)}))}static taskEditBtnHandler(t){t.target.parentElement.children[1].textContent,document.querySelector("#project-name").textContent}static taskDeleteBtnHandler(t){const e=t.target.parentElement,o=e.children[1].textContent,c=document.querySelector("#project-name").textContent;s.deleteTask(c,o),e.remove()}static openForm(){document.querySelector("#add-task").addEventListener("click",(()=>{document.querySelector("#form-container").classList.add("active"),document.querySelector("#overlay").classList.add("active")}))}static cancelForm(){document.querySelector("#cancel-task").addEventListener("click",(()=>{document.querySelector("#form-container").classList.remove("active"),document.querySelector("#overlay").classList.remove("active")}))}static submitTask(){document.querySelector("#form").addEventListener("submit",(e=>{e.preventDefault();const o=document.querySelector("#project-name").textContent,a=document.querySelector("#task-title").value,n=document.querySelector("#task-date").value;""!==a&&(s.getToDoList().getProject(o).contains(a)||(s.addTask(o,new t(a,n)),c.createTask(a,n),document.querySelector("#form-container").classList.remove("active"),document.querySelector("#overlay").classList.remove("active")))}))}static form(){c.openForm(),c.submitTask(),c.cancelForm()}}document.addEventListener("DOMContentLoaded",c.loadPage)})();